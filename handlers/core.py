# core.py
from telegram import Update
from telegram.ext import ContextTypes
from menus.main_menu import main_kb
from menus.add_menu import alert_kb
import storage.json_store as json_store
from services.cmc import get_price_float
import re

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üîª Main menu", reply_markup=main_kb())

async def handle_text(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    # print("‚ñ∂Ô∏è handle_text entered; await_coin:", ctx.user_data.get("await_coin"), "; user_data:", json_store.user_data)
    uid = update.message.from_user.id
    txt = update.message.text.strip().upper()
    u = json_store.user_data.setdefault(uid, {"coins": {}, "wallets": {}, "nfts": {}})
    text = update.message.text.strip().upper()
    # –Ø–∫—â–æ –º–∏ –æ—á—ñ–∫—É—î–º–æ, —â–æ –∑–∞—Ä–∞–∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞–¥—Å–∏–ª–∞—î —Å–∏–º–≤–æ–ª –º–æ–Ω–µ—Ç–∏
    if ctx.user_data.get("await_coin"):
        ctx.user_data["await_coin"] = False

        # –ù–µ –¥–æ–¥–∞—î–º–æ –¥—É–±–ª—ñ–∫–∞—Ç–∏
        if txt in u["coins"]:
            await update.message.reply_text(
                f"‚ùóÔ∏è {txt} —É–∂–µ –≤ –æ–±—Ä–∞–Ω–∏—Ö.",
                reply_markup=main_kb()
            )
            return

        # –î–æ–¥–∞—î–º–æ –º–æ–Ω–µ—Ç—É
        u["coins"][txt] = {"track": None, "last": None}
        # print("üìù about to save; this user entry:", u)
        json_store.save_data()  # –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è –∑–º—ñ–Ω–∏
        # print("üíæ after save; full user_data:", json_store.user_data)
        await update.message.reply_text(
            f"‚úÖ {txt} added. Select alert threshold:",
            reply_markup=alert_kb(txt)
        )
        return
    
        # 2Ô∏è‚É£  –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —à–∞–±–ª–æ–Ω ¬´<—á–∏—Å–ª–æ> <—Å–∏–º–≤–æ–ª>¬ª
    m = re.fullmatch(r"\s*([\d.]+)\s+([a-zA-Z0-9]+)\s*", text)
    if m:
        qty, sym = float(m.group(1)), m.group(2).upper()
        price = await get_price_float(sym)
        if price is None:
            await update.message.reply_text(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ —Ü—ñ–Ω—É –¥–ª—è {sym}.")
        else:
            total = qty * price
            await update.message.reply_text(
                f"{qty:g} {sym} ‚âà **${total:,.2f}**",
                parse_mode="Markdown"
            )
        return

    # –£—Å—ñ —ñ–Ω—à—ñ —Ç–µ–∫—Å—Ç–∏ ‚Äî –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—É—î–º–æ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
    await update.message.reply_text(
        "Choose from menu ‚Üì",
        reply_markup=main_kb()
    )
